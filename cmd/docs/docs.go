// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/subscriptions": {
            "get": {
                "description": "Retrieves a list of all online subscriptions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get all subscriptions",
                "responses": {
                    "200": {
                        "description": "List of subscriptions retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.SubscriptionResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new online subscription.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Create a new subscription",
                "parameters": [
                    {
                        "description": "Subscription creation details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription created successfully",
                        "schema": {
                            "$ref": "#/definitions/responses.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/total": {
            "get": {
                "description": "Calculates the total cost of subscriptions based on user ID, service name, and a period.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Calculate total cost of subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "User ID to filter by",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Service name to filter by (case-insensitive) (Yandex Plus)",
                        "name": "service_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start date of the period (RFC3339 format, e.g., 2025-01-01T00:00:00Z)",
                        "name": "period_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "End date of the period (RFC3339 format, e.g., 2025-12-31T23:59:59Z)",
                        "name": "period_end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total cost calculated successfully",
                        "schema": {
                            "$ref": "#/definitions/responses.TotalCostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request (e.g., invalid query parameters)",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}": {
            "get": {
                "description": "Retrieves a single online subscription by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get subscription by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/responses.SubscriptionResponse"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates details of an existing subscription by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Update an existing subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subscription update details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription updated successfully",
                        "schema": {
                            "$ref": "#/definitions/responses.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or parameters",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an online subscription by its ID.",
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Delete a subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription deleted successfully"
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.CreateSubscriptionRequest": {
            "type": "object",
            "required": [
                "price",
                "service_name",
                "start_date",
                "user_id"
            ],
            "properties": {
                "end_date": {
                    "description": "Optional end date of the subscription in RFC3339 format.\n@example 2026-07-31T00:00:00Z",
                    "type": "string"
                },
                "price": {
                    "description": "Price of the subscription.\n@example 400",
                    "type": "integer"
                },
                "service_name": {
                    "description": "Name of the subscription service.\n@example Yandex Plus",
                    "type": "string"
                },
                "start_date": {
                    "description": "Start date of the subscription in \"MM-YYYY\" format.\n@example 07-2025",
                    "type": "string"
                },
                "user_id": {
                    "description": "User ID associated with the subscription.\n@example 60601fee-2bf1-4721-ae6f-7636e79a0cba",
                    "type": "string"
                }
            }
        },
        "requests.UpdateSubscriptionRequest": {
            "type": "object",
            "required": [
                "price",
                "service_name",
                "start_date",
                "user_id"
            ],
            "properties": {
                "end_date": {
                    "description": "Optional end date of the subscription in RFC3339 format.\n@example 2026-08-31T00:00:00Z",
                    "type": "string"
                },
                "price": {
                    "description": "Price of the subscription.\n@example 450",
                    "type": "integer"
                },
                "service_name": {
                    "description": "Name of the subscription service.\n@example Yandex Plus",
                    "type": "string"
                },
                "start_date": {
                    "description": "Start date of the subscription in \"MM-YYYY\" format.\n@example 07-2025",
                    "type": "string"
                },
                "user_id": {
                    "description": "User ID associated with the subscription.\n@example 60601fee-2bf1-4721-ae6f-7636e79a0cba",
                    "type": "string"
                }
            }
        },
        "responses.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Message describes the error that occurred.\n@example \"Subscription not found\"",
                    "type": "string"
                }
            }
        },
        "responses.SubscriptionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Creation timestamp of the subscription in RFC3339 format.\n@example 2025-07-17T10:30:00Z",
                    "type": "string"
                },
                "end_date": {
                    "description": "Optional end date of the subscription in RFC3339 format.\n@example 2026-07-31T00:00:00Z",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the subscription.\n@example 1",
                    "type": "integer"
                },
                "price": {
                    "description": "Price of the subscription.\n@example 400",
                    "type": "integer"
                },
                "service_name": {
                    "description": "Name of the subscription service.\n@example Yandex Plus",
                    "type": "string"
                },
                "start_date": {
                    "description": "Start date of the subscription in \"MM-YYYY\" format.\n@example 07-2025",
                    "type": "string"
                },
                "user_id": {
                    "description": "User ID associated with the subscription.\n@example 60601fee-2bf1-4721-ae6f-7636e79a0cba",
                    "type": "string"
                }
            }
        },
        "responses.TotalCostResponse": {
            "type": "object",
            "properties": {
                "total_cost": {
                    "description": "TotalCost is the aggregated sum of subscription prices.\n@example 1200",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Subscription Service API",
	Description:      "This is a sample subscription service API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
